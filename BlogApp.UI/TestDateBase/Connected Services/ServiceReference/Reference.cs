//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestDateBase.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/RegisterUser", ReplyAction="http://tempuri.org/IBlogService/RegisterUserResponse")]
        void RegisterUser(BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/RegisterUser", ReplyAction="http://tempuri.org/IBlogService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(BLL.DTO.UserDTO user);
        
        // CODEGEN: Контракт генерации сообщений с операцией UploadFile не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UploadFile", ReplyAction="http://tempuri.org/IBlogService/UploadFileResponse")]
        TestDateBase.ServiceReference.UploadFileResponse UploadFile(TestDateBase.ServiceReference.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UploadFile", ReplyAction="http://tempuri.org/IBlogService/UploadFileResponse")]
        System.Threading.Tasks.Task<TestDateBase.ServiceReference.UploadFileResponse> UploadFileAsync(TestDateBase.ServiceReference.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFile", ReplyAction="http://tempuri.org/IBlogService/DownloadFileResponse")]
        System.IO.Stream DownloadFile(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFile", ReplyAction="http://tempuri.org/IBlogService/DownloadFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/Connect", ReplyAction="http://tempuri.org/IBlogService/ConnectResponse")]
        BLL.DTO.UserDTO Connect(string passwordHash, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/Connect", ReplyAction="http://tempuri.org/IBlogService/ConnectResponse")]
        System.Threading.Tasks.Task<BLL.DTO.UserDTO> ConnectAsync(string passwordHash, string login);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlogService/Disconnect")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlogService/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByUserHashTages", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByUserHashTagesResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByUserHashTages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByUserHashTages", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByUserHashTagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByUserHashTagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetHashTag", ReplyAction="http://tempuri.org/IBlogService/GetHashTagResponse")]
        BLL.DTO.HashTagDTO GetHashTag(string hashtag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetHashTag", ReplyAction="http://tempuri.org/IBlogService/GetHashTagResponse")]
        System.Threading.Tasks.Task<BLL.DTO.HashTagDTO> GetHashTagAsync(string hashtag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByHashTag", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByHashTagResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByHashTag(string hashtag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByHashTag", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByHashTagResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByHashTagAsync(string hashtag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByTitle", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByTitleResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesByTitle", ReplyAction="http://tempuri.org/IBlogService/GetArticlesByTitleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetLikedArticles", ReplyAction="http://tempuri.org/IBlogService/GetLikedArticlesResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetLikedArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetLikedArticles", ReplyAction="http://tempuri.org/IBlogService/GetLikedArticlesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetLikedArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetLikedArticles", ReplyAction="http://tempuri.org/IBlogService/SetLikedArticlesResponse")]
        void SetLikedArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetLikedArticles", ReplyAction="http://tempuri.org/IBlogService/SetLikedArticlesResponse")]
        System.Threading.Tasks.Task SetLikedArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetMyArticles", ReplyAction="http://tempuri.org/IBlogService/GetMyArticlesResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetMyArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetMyArticles", ReplyAction="http://tempuri.org/IBlogService/GetMyArticlesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetMyArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetMyArticles", ReplyAction="http://tempuri.org/IBlogService/SetMyArticlesResponse")]
        void SetMyArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetMyArticles", ReplyAction="http://tempuri.org/IBlogService/SetMyArticlesResponse")]
        System.Threading.Tasks.Task SetMyArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetViewedArticles", ReplyAction="http://tempuri.org/IBlogService/GetViewedArticlesResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetViewedArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetViewedArticles", ReplyAction="http://tempuri.org/IBlogService/GetViewedArticlesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetViewedArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetViewedArticles", ReplyAction="http://tempuri.org/IBlogService/SetViewedArticlesResponse")]
        void SetViewedArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetViewedArticles", ReplyAction="http://tempuri.org/IBlogService/SetViewedArticlesResponse")]
        System.Threading.Tasks.Task SetViewedArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetFavoriteArticles", ReplyAction="http://tempuri.org/IBlogService/GetFavoriteArticlesResponse")]
        System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetFavoriteArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetFavoriteArticles", ReplyAction="http://tempuri.org/IBlogService/GetFavoriteArticlesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetFavoriteArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetFavoriteArticles", ReplyAction="http://tempuri.org/IBlogService/SetFavoriteArticlesResponse")]
        void SetFavoriteArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetFavoriteArticles", ReplyAction="http://tempuri.org/IBlogService/SetFavoriteArticlesResponse")]
        System.Threading.Tasks.Task SetFavoriteArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetUserHashTags", ReplyAction="http://tempuri.org/IBlogService/GetUserHashTagsResponse")]
        System.Collections.Generic.List<BLL.DTO.HashTagDTO> GetUserHashTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetUserHashTags", ReplyAction="http://tempuri.org/IBlogService/GetUserHashTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.HashTagDTO>> GetUserHashTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetUserHashTags", ReplyAction="http://tempuri.org/IBlogService/SetUserHashTagsResponse")]
        void SetUserHashTags(System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetUserHashTags", ReplyAction="http://tempuri.org/IBlogService/SetUserHashTagsResponse")]
        System.Threading.Tasks.Task SetUserHashTagsAsync(System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesHashTags", ReplyAction="http://tempuri.org/IBlogService/GetArticlesHashTagsResponse")]
        System.Collections.Generic.List<BLL.DTO.HashTagDTO> GetArticlesHashTags(BLL.DTO.ArticleDTO article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetArticlesHashTags", ReplyAction="http://tempuri.org/IBlogService/GetArticlesHashTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.HashTagDTO>> GetArticlesHashTagsAsync(BLL.DTO.ArticleDTO article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetArticleHashTags", ReplyAction="http://tempuri.org/IBlogService/SetArticleHashTagsResponse")]
        void SetArticleHashTags(BLL.DTO.ArticleDTO article, System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTagDTOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/SetArticleHashTags", ReplyAction="http://tempuri.org/IBlogService/SetArticleHashTagsResponse")]
        System.Threading.Tasks.Task SetArticleHashTagsAsync(BLL.DTO.ArticleDTO article, System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTagDTOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/Test", ReplyAction="http://tempuri.org/IBlogService/TestResponse")]
        string Test(string t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/Test", ReplyAction="http://tempuri.org/IBlogService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(string t);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string filePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(string filePath, System.IO.Stream FileByteStream) {
            this.filePath = filePath;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : TestDateBase.ServiceReference.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<TestDateBase.ServiceReference.IBlogService>, TestDateBase.ServiceReference.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterUser(BLL.DTO.UserDTO user) {
            base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(BLL.DTO.UserDTO user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestDateBase.ServiceReference.UploadFileResponse TestDateBase.ServiceReference.IBlogService.UploadFile(TestDateBase.ServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string filePath, System.IO.Stream FileByteStream) {
            TestDateBase.ServiceReference.UploadFileRequest inValue = new TestDateBase.ServiceReference.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            TestDateBase.ServiceReference.UploadFileResponse retVal = ((TestDateBase.ServiceReference.IBlogService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestDateBase.ServiceReference.UploadFileResponse> TestDateBase.ServiceReference.IBlogService.UploadFileAsync(TestDateBase.ServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestDateBase.ServiceReference.UploadFileResponse> UploadFileAsync(string filePath, System.IO.Stream FileByteStream) {
            TestDateBase.ServiceReference.UploadFileRequest inValue = new TestDateBase.ServiceReference.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            return ((TestDateBase.ServiceReference.IBlogService)(this)).UploadFileAsync(inValue);
        }
        
        public System.IO.Stream DownloadFile(string filePath) {
            return base.Channel.DownloadFile(filePath);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(string filePath) {
            return base.Channel.DownloadFileAsync(filePath);
        }
        
        public BLL.DTO.UserDTO Connect(string passwordHash, string login) {
            return base.Channel.Connect(passwordHash, login);
        }
        
        public System.Threading.Tasks.Task<BLL.DTO.UserDTO> ConnectAsync(string passwordHash, string login) {
            return base.Channel.ConnectAsync(passwordHash, login);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        public System.Threading.Tasks.Task DisconnectAsync() {
            return base.Channel.DisconnectAsync();
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByUserHashTages() {
            return base.Channel.GetArticlesByUserHashTages();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByUserHashTagesAsync() {
            return base.Channel.GetArticlesByUserHashTagesAsync();
        }
        
        public BLL.DTO.HashTagDTO GetHashTag(string hashtag) {
            return base.Channel.GetHashTag(hashtag);
        }
        
        public System.Threading.Tasks.Task<BLL.DTO.HashTagDTO> GetHashTagAsync(string hashtag) {
            return base.Channel.GetHashTagAsync(hashtag);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByHashTag(string hashtag) {
            return base.Channel.GetArticlesByHashTag(hashtag);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByHashTagAsync(string hashtag) {
            return base.Channel.GetArticlesByHashTagAsync(hashtag);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetArticlesByTitle(string title) {
            return base.Channel.GetArticlesByTitle(title);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetArticlesByTitleAsync(string title) {
            return base.Channel.GetArticlesByTitleAsync(title);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetLikedArticles() {
            return base.Channel.GetLikedArticles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetLikedArticlesAsync() {
            return base.Channel.GetLikedArticlesAsync();
        }
        
        public void SetLikedArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            base.Channel.SetLikedArticles(articles);
        }
        
        public System.Threading.Tasks.Task SetLikedArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            return base.Channel.SetLikedArticlesAsync(articles);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetMyArticles() {
            return base.Channel.GetMyArticles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetMyArticlesAsync() {
            return base.Channel.GetMyArticlesAsync();
        }
        
        public void SetMyArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            base.Channel.SetMyArticles(articles);
        }
        
        public System.Threading.Tasks.Task SetMyArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            return base.Channel.SetMyArticlesAsync(articles);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetViewedArticles() {
            return base.Channel.GetViewedArticles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetViewedArticlesAsync() {
            return base.Channel.GetViewedArticlesAsync();
        }
        
        public void SetViewedArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            base.Channel.SetViewedArticles(articles);
        }
        
        public System.Threading.Tasks.Task SetViewedArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            return base.Channel.SetViewedArticlesAsync(articles);
        }
        
        public System.Collections.Generic.List<BLL.DTO.ArticleDTO> GetFavoriteArticles() {
            return base.Channel.GetFavoriteArticles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.ArticleDTO>> GetFavoriteArticlesAsync() {
            return base.Channel.GetFavoriteArticlesAsync();
        }
        
        public void SetFavoriteArticles(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            base.Channel.SetFavoriteArticles(articles);
        }
        
        public System.Threading.Tasks.Task SetFavoriteArticlesAsync(System.Collections.Generic.List<BLL.DTO.ArticleDTO> articles) {
            return base.Channel.SetFavoriteArticlesAsync(articles);
        }
        
        public System.Collections.Generic.List<BLL.DTO.HashTagDTO> GetUserHashTags() {
            return base.Channel.GetUserHashTags();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.HashTagDTO>> GetUserHashTagsAsync() {
            return base.Channel.GetUserHashTagsAsync();
        }
        
        public void SetUserHashTags(System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTags) {
            base.Channel.SetUserHashTags(hashTags);
        }
        
        public System.Threading.Tasks.Task SetUserHashTagsAsync(System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTags) {
            return base.Channel.SetUserHashTagsAsync(hashTags);
        }
        
        public System.Collections.Generic.List<BLL.DTO.HashTagDTO> GetArticlesHashTags(BLL.DTO.ArticleDTO article) {
            return base.Channel.GetArticlesHashTags(article);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BLL.DTO.HashTagDTO>> GetArticlesHashTagsAsync(BLL.DTO.ArticleDTO article) {
            return base.Channel.GetArticlesHashTagsAsync(article);
        }
        
        public void SetArticleHashTags(BLL.DTO.ArticleDTO article, System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTagDTOs) {
            base.Channel.SetArticleHashTags(article, hashTagDTOs);
        }
        
        public System.Threading.Tasks.Task SetArticleHashTagsAsync(BLL.DTO.ArticleDTO article, System.Collections.Generic.List<BLL.DTO.HashTagDTO> hashTagDTOs) {
            return base.Channel.SetArticleHashTagsAsync(article, hashTagDTOs);
        }
        
        public string Test(string t) {
            return base.Channel.Test(t);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(string t) {
            return base.Channel.TestAsync(t);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HostTest.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DoWork", ReplyAction="http://tempuri.org/IBlogService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DoWork", ReplyAction="http://tempuri.org/IBlogService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        // CODEGEN: Контракт генерации сообщений с именем упаковщика (UploadFileRequest) сообщения UploadFileRequest не соответствует значению по умолчанию (UploadFile).
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UploadFile", ReplyAction="http://tempuri.org/IBlogService/UploadFileResponse")]
        HostTest.ServiceReference.UploadFileInfo UploadFile(HostTest.ServiceReference.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UploadFile", ReplyAction="http://tempuri.org/IBlogService/UploadFileResponse")]
        System.Threading.Tasks.Task<HostTest.ServiceReference.UploadFileInfo> UploadFileAsync(HostTest.ServiceReference.UploadFileRequest request);
        
        // CODEGEN: Контракт генерации сообщений с именем упаковщика (DownloadFileRequest) сообщения DownloadFileRequest не соответствует значению по умолчанию (DownloadFile).
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFile", ReplyAction="http://tempuri.org/IBlogService/DownloadFileResponse")]
        HostTest.ServiceReference.DownloadFileInfo DownloadFile(HostTest.ServiceReference.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFile", ReplyAction="http://tempuri.org/IBlogService/DownloadFileResponse")]
        System.Threading.Tasks.Task<HostTest.ServiceReference.DownloadFileInfo> DownloadFileAsync(HostTest.ServiceReference.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFileTest", ReplyAction="http://tempuri.org/IBlogService/DownloadFileTestResponse")]
        System.IO.Stream DownloadFileTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DownloadFileTest", ReplyAction="http://tempuri.org/IBlogService/DownloadFileTestResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadFileTestAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string filePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(string filePath, System.IO.Stream FileByteStream) {
            this.filePath = filePath;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileInfo {
        
        public UploadFileInfo() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int fileId;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(int fileId) {
            this.fileId = fileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int fileId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public DownloadFileInfo() {
        }
        
        public DownloadFileInfo(int fileId, string fileName, System.IO.Stream FileByteStream) {
            this.fileId = fileId;
            this.fileName = fileName;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : HostTest.ServiceReference.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<HostTest.ServiceReference.IBlogService>, HostTest.ServiceReference.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HostTest.ServiceReference.UploadFileInfo HostTest.ServiceReference.IBlogService.UploadFile(HostTest.ServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string filePath, System.IO.Stream FileByteStream) {
            HostTest.ServiceReference.UploadFileRequest inValue = new HostTest.ServiceReference.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            HostTest.ServiceReference.UploadFileInfo retVal = ((HostTest.ServiceReference.IBlogService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HostTest.ServiceReference.UploadFileInfo> HostTest.ServiceReference.IBlogService.UploadFileAsync(HostTest.ServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<HostTest.ServiceReference.UploadFileInfo> UploadFileAsync(string filePath, System.IO.Stream FileByteStream) {
            HostTest.ServiceReference.UploadFileRequest inValue = new HostTest.ServiceReference.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            return ((HostTest.ServiceReference.IBlogService)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HostTest.ServiceReference.DownloadFileInfo HostTest.ServiceReference.IBlogService.DownloadFile(HostTest.ServiceReference.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public string DownloadFile(ref int fileId, out System.IO.Stream FileByteStream) {
            HostTest.ServiceReference.DownloadFileRequest inValue = new HostTest.ServiceReference.DownloadFileRequest();
            inValue.fileId = fileId;
            HostTest.ServiceReference.DownloadFileInfo retVal = ((HostTest.ServiceReference.IBlogService)(this)).DownloadFile(inValue);
            fileId = retVal.fileId;
            FileByteStream = retVal.FileByteStream;
            return retVal.fileName;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HostTest.ServiceReference.DownloadFileInfo> HostTest.ServiceReference.IBlogService.DownloadFileAsync(HostTest.ServiceReference.DownloadFileRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<HostTest.ServiceReference.DownloadFileInfo> DownloadFileAsync(int fileId) {
            HostTest.ServiceReference.DownloadFileRequest inValue = new HostTest.ServiceReference.DownloadFileRequest();
            inValue.fileId = fileId;
            return ((HostTest.ServiceReference.IBlogService)(this)).DownloadFileAsync(inValue);
        }
        
        public System.IO.Stream DownloadFileTest() {
            return base.Channel.DownloadFileTest();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadFileTestAsync() {
            return base.Channel.DownloadFileTestAsync();
        }
    }
}
